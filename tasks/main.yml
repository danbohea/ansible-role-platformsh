---

# Running `platform cc` ensures that the cli will create its ".platformsh" and
# "cache" directories if required.
- name: Run `platform cc`.
  shell: "{{ platformsh_install_dir }}/platform cc"
  become: "{{ vagrant_user }}"
  args:
    creates: "{{ platformsh_config_dir }}/cache"

- name: Ensure API token file is present (passwordless authentication).
  template:
    src: token
    dest: "{{ platformsh_config_dir }}/token"

- name: Ensure config.yaml file is present (passwordless authentication).
  template:
    src: config.yaml
    dest: "{{ platformsh_config_dir }}/config.yaml"

# ------------------------------------------------------------------------------

- name: Enable autocompletion and shell aliases.
  shell: "{{ platformsh_install_dir }}/platform self:install -y"
  become: "{{ vagrant_user }}"
  args:
    creates: "{{ platformsh_config_dir }}/shell-config.rc"

# ------------------------------------------------------------------------------

- name: "Set platform project remote and create .platform/local/project.yaml"
  shell: "{{ platformsh_install_dir }}/platform project:set-remote {{ platformsh_app_id }}"
  become: "{{ vagrant_user }}"
  args:
    chdir: "{{ platformsh_app_root }}"
    creates: "{{ platformsh_app_root }}/.platform.app.yaml"

# ------------------------------------------------------------------------------

- name: Run `platform build`.
  shell: "{{ platformsh_install_dir }}/platform build"
  become: "{{ vagrant_user }}"
  args:
    chdir: "{{ platformsh_app_root }}"

# ------------------------------------------------------------------------------

- name: Generate drush aliases.
  shell: "{{ platformsh_install_dir }}/platform local:drush-aliases"
  args:
    chdir: "{{ platformsh_app_root }}"
  become: "{{ vagrant_user }}"

- name: Check group name of current drush aliases.
  shell: "{{ platformsh_install_dir }}/platform local:drush-aliases --pipe"
  args:
    chdir: "{{ platformsh_app_root }}"
  register: platformsh_drush_aliases_group_name
  become: "{{ vagrant_user }}"
  changed_when: false

- name: Ensure drush aliases use the app name as the group name.
  shell: "{{ platformsh_install_dir }}/platform local:drush-aliases --group={{ platformsh_app_name }} -y"
  args:
    chdir: "{{ platformsh_app_root }}"
  become: "{{ vagrant_user }}"
  when: platformsh_drush_aliases_group_name.stdout != platformsh_app_id

# ------------------------------------------------------------------------------

# TODO: Drupal only. Add condition?
- name: Add database config to settings.local.php.
  template:
    src: settings.local.php
    dest: "{{ platformsh_app_root }}/.platform/local/shared/settings.local.php"

# ------------------------------------------------------------------------------

- name: Sync database from remote master environment.
  shell: "drush sql-sync @{{ platformsh_app_name }}.master @{{ platformsh_app_name }}._local -y"
  become: "{{ vagrant_user }}"
